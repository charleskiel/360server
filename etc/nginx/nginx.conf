user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
#load_module modules/ngx_rtmp_module.so;
events {
	worker_connections 768;
	# multi_accept on;
}

http {


	##
	# Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	# include /etc/nginx/conf.d/*.conf;
	# include /etc/nginx/sites-enabled/*;

     server {
          # Enable HTTP/2
	  	listen 80 http2;
		listen 443 ssl http2;

          listen [::]:443 ssl http2;
          server_name 360tv.net www.360tv.net;
          # Use the Letâ€™s Encrypt certificates
          ssl_certificate /etc/letsencrypt/live/360tv.net/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/360tv.net/privkey.pem;
		# location / {
	          # root /var/www/360server/site/;
		#      index index.html;
          # }

		location / {
               proxy_pass http://73.203.117.107:5000;
          }
     }

	server {
		listen [::]:443 ssl http2;
		server_name api.360tv.net;
          ssl_certificate /etc/letsencrypt/live/360tv.net/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/360tv.net/privkey.pem;
		location / {
               proxy_pass http://73.203.117.107:5003;
          }
	}
	
	server {
		server_name ha.charleskiel.dev;
		listen 443 ssl http2;
          listen [::]:443 ssl http2;
          ssl_certificate /etc/letsencrypt/live/charleskiel.dev/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/charleskiel.dev/privkey.pem;
          location / {
               proxy_pass http://73.203.117.107:8123;
          }
	}
	server {
		listen 80 http2;
		listen 443 ssl http2;
          listen [::]:443 ssl http2;
		server_name mm.charleskiel.dev;
          ssl_certificate /etc/letsencrypt/live/charleskiel.dev/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/charleskiel.dev/privkey.pem;
          location / {
               proxy_pass http://73.203.117.107:8002;
          }
	}
	
     server {
          # Enable HTTP/2
	  	listen 80 http2;
		listen 443 ssl http2;
          listen [::]:443 ssl http2;
          server_name charleskiel.dev www.charleskiel.dev;
          ssl_certificate /etc/letsencrypt/live/charleskiel.dev/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/charleskiel.dev/privkey.pem;


          location / {
	          root /var/www/charleskiel.dev/;
		     index index.html index.htm;
          }

          location /mm {
               proxy_pass http://73.203.117.107:8000;
               proxy_http_version 1.1;
               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection 'upgrade';
               proxy_set_header Host $host;
               proxy_set_header X-Real-IP $remote_addr;
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header X-NginX-Proxy true;

               proxy_cache_bypass $http_upgrade;
          }

          location /npm/ {
               proxy_pass http://localhost:3000;
               proxy_http_version 1.1;
               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection 'upgrade';
               proxy_set_header Host $host;
               proxy_set_header X-Real-IP $remote_addr;
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header X-NginX-Proxy true;

               proxy_cache_bypass $http_upgrade;
          }
     }
}
